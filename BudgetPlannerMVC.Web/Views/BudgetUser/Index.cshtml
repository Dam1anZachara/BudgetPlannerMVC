@model BudgetPlannerMVC.Application.ViewModels.UserView.ListBudgetUserForListVm

@{
    ViewData["Title"] = "Index";
}

<h1 class="display-4">Budget Users</h1>
@if (User.IsInRole("PreUser"))
{
    <p>
        <a class="btn btn-primary" asp-action="CreateBudgetUserProfile" style="margin-top: 10px">Create Profile</a>
    </p>
}
<form asp-action="Index" asp-controller="BudgetUser" method="post" style="margin-bottom:60px">
    <div class="form-inline justify-content-start">
        <div class="d-flex" style="margin:10px 20px 20px 0px">
            <div class="d-flex">
                <input class="form-control form-rounded" type="text" asp-for="SearchString" name="searchString" id="searchString" placeholder="Search" />
            </div>
            <div class="d-flex">
                <input class="btn btn-outline-dark ml-2" type="submit" value="Search" />
            </div>
        </div>
    </div>
    <div class="row">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        User Name
                    </th>
                    <th>
                        Last Name
                    </th>
                    <th>
                        First Name
                    </th>
                    <th>
                        Role
                    </th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.BudgetUsers)
                {
                    @if (!(item.UserId == Model.CurrentUserId && User.IsInRole("PreUser")))
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserRoleId)
                            </td>
                            @if (User.IsInRole("Admin"))
                            {
                                <td>
                                    @Html.ActionLink("Edit", "EditBudgetUser", new {  id=item.Id }, new {@class = "btn btn-info"})
                                    @Html.ActionLink("Details", "Details", new { id=item.Id}, new {@class = "btn btn-warning"})
                                    @if (item.UserRoleId == "Admin")
                                    {
                                        @Html.ActionLink("Delete", "Delete", new {  id=item.Id }, new {@class = "btn btn-danger disabled"})
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Delete", "Delete", new {  id=item.Id }, new {@class = "btn btn-danger"})
                                    }
                                    
                                </td>
                                @if (item.UserId == Model.CurrentUserId && Model.CountAdminUsers <= 1)
                                {
                                    <td>
                                        @Html.ActionLink("User permissions", "EditUserRole", new {  userId=item.UserId }, new {@class = "btn btn-primary disabled"})
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        @Html.ActionLink("User permissions", "EditUserRole", new {  userId=item.UserId }, new {@class = "btn btn-primary"})
                                    </td>
                                }

                            }
                            else if (item.UserId == Model.CurrentUserId && User.IsInRole("User"))
                            {
                                <td>
                                    @Html.ActionLink("Edit", "EditBudgetUser", new {  id=item.Id }, new {@class = "btn btn-info"})
                                    @Html.ActionLink("Details", "Details", new { id=item.Id}, new {@class = "btn btn-warning"})
                                </td>
                                <td></td>
                            }
                            else
                            {
                                <td>
                                    @Html.ActionLink("Edit", "EditBudgetUser", new {  id=item.Id }, new {@class = "btn btn-info disabled"})
                                    @Html.ActionLink("Details", "Details", new { id=item.Id}, new {@class = "btn btn-warning"})
                                </td>
                                <td></td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    <div class="row">
        <table>
            <tr>
                @for (int i = 1; i <= Math.Ceiling(Model.Count / (double)Model.PageSize); i++)
                {
                    <td>
                        @if (i != Model.CurrentPage)
                        {
                            <a class="badge badge-dark" href="javascript:PagerClick(@i)">@i</a>
                        }
                        else
                        {
                            <span class="badge badge-outline-dark">@i</span>
                        }
                    </td>
                }
            </tr>
        </table>
        <input type="hidden" name="pageNo" id="pageNo" />
        <input type="hidden" name="pageSize" id="pageSize" value="8" />
    </div>
</form>

@section Scripts
{
<script type="text/javascript">
    function PagerClick(index)
    {
        document.getElementById("pageNo").value = index;
        document.forms[1].submit();
    }
</script>
}