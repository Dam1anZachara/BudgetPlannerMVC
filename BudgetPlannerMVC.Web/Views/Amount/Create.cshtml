@model BudgetPlannerMVC.Web.Models.AmountModel

@{
    ViewData["Title"] = "Create";
}

<h1>Add Amount</h1>

@*<h4>AmountModel</h4>*@
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TypeName" class="control-label"></label>
                @*<input asp-for="TypeName" class="form-control" />*@
                @Html.DropDownListFor(model => model.TypeName, new SelectList(ViewBag.configNames))
                <span asp-validation-for="TypeName" class="text-danger"></span>
            </div>
            <!--<div class="form-group">
                <label asp-for="TypeOfAmount" class="control-label"></label>-->
                @*@Html.DisplayFor(model => model.TypeOfAmount);*@
                @*<input asp-for="TypeOfAmount" class="form-control" />*@
                <!--<span asp-validation-for="TypeOfAmount" class="text-danger"></span>
            </div>-->
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Value" class="control-label"></label>
                @Html.Encode("in PLN")
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List of Amounts</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
