@model BudgetPlannerMVC.Application.ViewModels.BudgetStatusView.BudgetStatusVm

@{
    ViewData["Title"] = "Index";
}

<h1 class="display-4">Plan: @Html.DisplayFor(model => model.ActivePlan.Name)</h1>
<div style="margin: 20px 0px 20px 0px">
    <div class="font-weight-bold">
        <i class="fa fa-calendar" aria-hidden="true"></i>
        Date: @Html.DisplayFor(model => model.ActivePlan.DateStart) - @Html.DisplayFor(model => model.ActivePlan.DateEnd)
        <div>
            <a class="form-inline btn btn-primary" asp-controller="Amount" asp-action="AddAmount" style="margin: 20px 0px 0px 0px">Add Amount</a>
        </div>
    </div>
</div>

<div class="row" style="margin-bottom:60px">
    <table class="table">
        <thead>
            <tr>
                <th class="col-2">
                    Type
                </th>
                <th class="col-2">
                    Assignment
                </th>
                <th class="col-2">
                    Current Value
                </th>
                <th class="col-2">
                    Progress
                </th>
                <th class="col-2">
                    Planned Value
                </th>
                <th class="col-2">
                    Difference
                </th>
                <th class="col-2">
                    Status
                </th>
            </tr>

        </thead>
        <tbody>
            @foreach (var item in Model.PlanTypes)
            {
                <tr>
                    @if (item.Type.AssignId == 1)
                    {
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.Type.Name)
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.Type.Assign.Name)
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.AmountValues)
                        </td>
                        <td class="col-2">
                            @if (item.Value != 0)
                            {
                                @if (item.AmountValues <= item.Value)
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                            @Math.Round(item.AmountValues / item.Value * 100)%
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-danger" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                            @Math.Round(item.AmountValues / item.Value * 100)%
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                @if (item.AmountValues <= item.Value)
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 100%">
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-danger" role="progressbar" style="width: 100%">
                                        </div>
                                    </div>
                                }
                            }
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.DifferenceValue)
                        </td>
                        @if (item.DifferenceValue >= 0)
                        {
                            <td class="col-2">
                                <i class="fa fa-check-circle-o fa-2x" aria-hidden="true" style="color:green"></i>

                            </td>
                        }
                        else
                        {
                            <td class="col-2">
                                <i class="fa fa-times-circle-o fa-2x" aria-hidden="true" style="color:red"></i>
                            </td>
                        }
                    }
                    else
                    {
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.Type.Name)
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.Type.Assign.Name)
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.AmountValues)
                        </td>
                        <td class="col-2">
                            @if (item.Value != 0)
                            {
                                @if (item.AmountValues < item.Value)
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-danger" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                            @Math.Round(item.AmountValues / item.Value * 100)%
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                            @Math.Round(item.AmountValues / item.Value * 100)%
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                @if (item.AmountValues < item.Value)
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-danger" role="progressbar" style="width: 100%">
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="progress" style="margin-top: 6px">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 100%">
                                        </div>
                                    </div>
                                }
                            }
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.DifferenceValue)
                        </td>
                        @if (item.DifferenceValue <= 0)
                        {
                            <td class="col-2">
                                <i class="fa fa-check-circle-o fa-2x" aria-hidden="true" style="color:green"></i>

                            </td>
                        }
                        else
                        {
                            <td class="col-2">
                                <i class="fa fa-times-circle-o fa-2x" aria-hidden="true" style="color:red"></i>
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
    <table class="table" style="margin:50px 0px 0px 0px">
        <thead>
            <tr>
                <th class="col-3">
                    <i class="fa fa-bar-chart" aria-hidden="true"></i>
                    BUDGET STATUS
                </th>
                <th class="col-3">
                    Expenses
                </th>
                <th class="col-3">
                    Incomes
                </th>
                <th class="col-3">
                    Balance
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="col-3 font-weight-bold">
                    In Plan
                </td>
                <td class="col-3 text-danger">
                    @Html.DisplayFor(modelItem => Model.SumValues.SumOfExpPlan)
                </td>
                <td class="col-3 text-success">
                    @Html.DisplayFor(modelItem => Model.SumValues.SumOfIncPlan)
                </td>
                <td class="col-3 text-warning">
                    @Html.DisplayFor(modelItem => Model.SumValues.BalancePlan)
                </td>
            </tr>
            <tr>
                <td class="col-3 font-weight-bold">
                    Out of Plan
                </td>
                <td class="col-3 text-danger">
                    @Html.DisplayFor(modelItem => Model.SumValues.SumOfExpOutOfPlan)
                </td>
                <td class="col-3 text-success">
                    @Html.DisplayFor(modelItem => Model.SumValues.SumOfIncOutOfPlan)
                </td>
                <td class="col-3 text-warning">
                    @Html.DisplayFor(modelItem => Model.SumValues.BalanceOutOfPlan)
                </td>
            </tr>
            <tr>
                <td class="col-3 font-weight-bold">
                    Total
                </td>
                <td class="col-3 text-danger font-weight-bold">
                    @Html.DisplayFor(modelItem => Model.SumValues.ExpensesTotal)
                </td>
                <td class="col-3 text-success font-weight-bold">
                    @Html.DisplayFor(modelItem => Model.SumValues.IncomesTotal)
                </td>
                <td class="col-3 text-warning font-weight-bold">
                    @Html.DisplayFor(modelItem => Model.SumValues.BalanceTotal)
                </td>
            </tr>
        </tbody>
    </table>
</div>

