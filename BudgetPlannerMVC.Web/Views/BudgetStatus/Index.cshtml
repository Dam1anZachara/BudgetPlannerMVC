@model BudgetPlannerMVC.Application.ViewModels.BudgetStatusView.BudgetStatusVm

@{
    ViewData["Title"] = "Index";
}
@{
    var i = 0;
}

@foreach (var item in Model.PlanTypes)
{
    if (i == 0)
    {
        i++;
        <h1 class="display-4">@item.Plan.Name</h1>
        <div style="margin: 20px 0px 20px 0px">
            <div class="font-weight-bold">
                Date: @item.Plan.DateStart - @item.Plan.DateEnd
            </div>
        </div>
    }
    break;
}

<div class="row">
    <table class="table">
        <thead>
            <tr>
                <th class="col-2">
                    Type
                </th>
                <th class="col-2">
                    Assignment
                </th>
                <th class="col-2">
                    Current Value
                </th>
                <th class="col-2">
                    Progress
                </th>
                <th class="col-2">
                    Planned Value
                </th>
                <th class="col-2">
                    Difference
                </th>
            </tr>

        </thead>
        <tbody>
            @foreach (var item in Model.PlanTypes)
            {
                <tr>
                    @if (item.Type.AssignId == 1)
                    {
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.Type.Name)
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.Type.Assign.Name)
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.AmountValues)
                        </td>
                        <td class="col-2" style="margin-left: -20px">
                            @if (item.AmountValues <= item.Value)
                            {
                                <div class="progress">
                                    <div class="progress-bar bg-success" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                        @Math.Round(item.AmountValues / item.Value * 100)%
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="progress">
                                    <div class="progress-bar bg-danger" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                        @Math.Round(item.AmountValues / item.Value * 100)%
                                    </div>
                                </div>
                            }
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td class="col-2 text-danger">
                            @Html.DisplayFor(modelItem => item.DifferenceValue)
                        </td>
                    }
                    else
                    {
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.Type.Name)
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.Type.Assign.Name)
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.AmountValues)
                        </td>
                        <td class="col-2">
                            @if (item.AmountValues <= item.Value)
                            {
                                <div class="progress">
                                    <div class="progress-bar bg-warning" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                        @Math.Round(item.AmountValues / item.Value * 100)%
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="progress">
                                    <div class="progress-bar bg-info" role="progressbar" style="width: @Math.Round(item.AmountValues / item.Value * 100)%">
                                        @Math.Round(item.AmountValues / item.Value * 100)%
                                    </div>
                                </div>
                            }
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.Value)
                        </td>
                        <td class="col-2 text-success">
                            @Html.DisplayFor(modelItem => item.DifferenceValue)
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th class="col-3">

                </th>
                <th class="col-3">
                    Expenses
                </th>
                <th class="col-3">
                    Incomes
                </th>
                <th class="col-3">
                    Balance
                </th>
            </tr>
        </thead>
        <tbody>
                <tr>
                    <td class="col-3 font-weight-bold">
                        In Plan
                    </td>
                    <td class="col-3 text-danger">
                        @Html.DisplayFor(modelItem => Model.SumValues.SumOfExpPlan)
                    </td>
                    <td class="col-3 text-success">
                        @Html.DisplayFor(modelItem => Model.SumValues.SumOfIncPlan)
                    </td>
                    <td class="col-3 text-warning">
                        @Html.DisplayFor(modelItem => Model.SumValues.BalancePlan)
                    </td>
                </tr>
                <tr>
                    <td class="col-3 font-weight-bold">
                        Out of Plan
                    </td>
                    <td class="col-3 text-danger">
                        @Html.DisplayFor(modelItem => Model.SumValues.SumOfExpOutOfPlan)
                    </td>
                    <td class="col-3 text-success">
                        @Html.DisplayFor(modelItem => Model.SumValues.SumOfIncOutOfPlan)
                    </td>
                    <td class="col-3 text-warning">
                        @Html.DisplayFor(modelItem => Model.SumValues.BalanceOutOfPlan)
                    </td>
                </tr>
                <tr>
                    <td class="col-3 font-weight-bold">
                        Total
                    </td>
                    <td class="col-3 text-danger">
                        @Html.DisplayFor(modelItem => Model.SumValues.ExpensesTotal)
                    </td>
                    <td class="col-3 text-success">
                        @Html.DisplayFor(modelItem => Model.SumValues.IncomesTotal)
                    </td>
                    <td class="col-3 text-warning">
                        @Html.DisplayFor(modelItem => Model.SumValues.BalanceTotal)
                    </td>
                </tr>
        </tbody>
    </table>
</div>

